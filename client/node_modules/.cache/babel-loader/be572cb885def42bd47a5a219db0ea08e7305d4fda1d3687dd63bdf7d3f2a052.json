{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\Personal-color-AI\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // src/App.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [selectedFile, setSelectedFile] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setSelectedFile(event.target.files[0]);\n//   };\n\n//   const handleUpload = async () => {\n//     if (!selectedFile) {\n//       alert(\"파일을 선택해주세요.\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:8000/upload\", formData);\n//       console.log(\"업로드 성공:\", response.data);\n//     } catch (error) {\n//       console.error(\"업로드 실패:\", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>파일 업로드</h1>\n//       <input type=\"file\" onChange={handleFileChange} />\n//       <button onClick={handleUpload}>업로드</button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// // App.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [personalColor, setPersonalColor] = useState('');\n//   const [fashionItems, setFashionItems] = useState([]);\n\n//   const handleFileChange = (event) => {\n//     setSelectedFile(event.target.files[0]);\n//   };\n\n//   const handleUpload = async () => {\n//     if (!selectedFile) {\n//       alert('파일을 선택해주세요.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('image', selectedFile);\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/api/predict', formData);\n//       setPersonalColor(response.data.personal_color);\n//       setFashionItems(response.data.fashion_items);\n//     } catch (error) {\n//       console.error('에러 발생:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>퍼컬 AI</h1>\n//       <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n//       <button onClick={handleUpload}>사진 업로드 및 분석</button>\n\n//       {personalColor && (\n//         <div>\n//           <h2>퍼스널 컬러 결과: {personalColor}</h2>\n//           <h3>추천 패션 아이템:</h3>\n//           <ul>\n//             {fashionItems.map((item, index) => (\n//               <li key={index}>{item}</li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [personalColor, setPersonalColor] = useState('쿨톤 여름'); // 임시 퍼스널 컬러 결과\n  const [fashionItems, setFashionItems] = useState(['파스텔 블루 셔츠', '화이트 팬츠', '실버 액세서리']); // 임시 패션 아이템 목록\n  const [isResultDisplayed, setIsResultDisplayed] = useState(false); // 결과 표시 여부\n\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert('파일을 선택해주세요.');\n      return;\n    }\n\n    // 백엔드 통신 부분 주석 처리\n    /*\r\n    const formData = new FormData();\r\n    formData.append('image', selectedFile);\r\n      try {\r\n      const response = await axios.post('http://localhost:8000/api/predict', formData);\r\n      setPersonalColor(response.data.personal_color);\r\n      setFashionItems(response.data.fashion_items);\r\n    } catch (error) {\r\n      console.error('에러 발생:', error);\r\n    }\r\n    */\n\n    // 임시로 결과 화면 표시\n    setIsResultDisplayed(true);\n  };\n  const handleBack = () => {\n    // 뒤로 가기 버튼 클릭 시 초기 상태로 복원\n    setIsResultDisplayed(false);\n    setSelectedFile(null);\n    setPersonalColor('');\n    setFashionItems([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD37C\\uCEEC AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), !isResultDisplayed ?\n    /*#__PURE__*/\n    // 사진 업로드 화면\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"\\uC0AC\\uC9C4 \\uC5C5\\uB85C\\uB4DC \\uBC0F \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // 결과 화면 (임시 데이터 표시)\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uD37C\\uC2A4\\uB110 \\uCEEC\\uB7EC \\uACB0\\uACFC: \", personalColor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uCD94\\uCC9C \\uD328\\uC158 \\uC544\\uC774\\uD15C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fashionItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        children: \"\\uB4A4\\uB85C \\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gbnx8u8NIiGrOq7hlVwIsvSKSXo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","personalColor","setPersonalColor","fashionItems","setFashionItems","isResultDisplayed","setIsResultDisplayed","handleFileChange","event","target","files","handleUpload","alert","handleBack","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","map","item","index","_c","$RefreshReg$"],"sources":["C:/git/Personal-color-AI/client/src/App.js"],"sourcesContent":["// // src/App.js\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function App() {\r\n//   const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     setSelectedFile(event.target.files[0]);\r\n//   };\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!selectedFile) {\r\n//       alert(\"파일을 선택해주세요.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"file\", selectedFile);\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:8000/upload\", formData);\r\n//       console.log(\"업로드 성공:\", response.data);\r\n//     } catch (error) {\r\n//       console.error(\"업로드 실패:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>파일 업로드</h1>\r\n//       <input type=\"file\" onChange={handleFileChange} />\r\n//       <button onClick={handleUpload}>업로드</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n// // App.js\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function App() {\r\n//   const [selectedFile, setSelectedFile] = useState(null);\r\n//   const [personalColor, setPersonalColor] = useState('');\r\n//   const [fashionItems, setFashionItems] = useState([]);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     setSelectedFile(event.target.files[0]);\r\n//   };\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!selectedFile) {\r\n//       alert('파일을 선택해주세요.');\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('image', selectedFile);\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8000/api/predict', formData);\r\n//       setPersonalColor(response.data.personal_color);\r\n//       setFashionItems(response.data.fashion_items);\r\n//     } catch (error) {\r\n//       console.error('에러 발생:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>퍼컬 AI</h1>\r\n//       <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n//       <button onClick={handleUpload}>사진 업로드 및 분석</button>\r\n\r\n//       {personalColor && (\r\n//         <div>\r\n//           <h2>퍼스널 컬러 결과: {personalColor}</h2>\r\n//           <h3>추천 패션 아이템:</h3>\r\n//           <ul>\r\n//             {fashionItems.map((item, index) => (\r\n//               <li key={index}>{item}</li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [personalColor, setPersonalColor] = useState('쿨톤 여름'); // 임시 퍼스널 컬러 결과\r\n  const [fashionItems, setFashionItems] = useState(['파스텔 블루 셔츠', '화이트 팬츠', '실버 액세서리']); // 임시 패션 아이템 목록\r\n  const [isResultDisplayed, setIsResultDisplayed] = useState(false); // 결과 표시 여부\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!selectedFile) {\r\n      alert('파일을 선택해주세요.');\r\n      return;\r\n    }\r\n\r\n    // 백엔드 통신 부분 주석 처리\r\n    /*\r\n    const formData = new FormData();\r\n    formData.append('image', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/predict', formData);\r\n      setPersonalColor(response.data.personal_color);\r\n      setFashionItems(response.data.fashion_items);\r\n    } catch (error) {\r\n      console.error('에러 발생:', error);\r\n    }\r\n    */\r\n\r\n    // 임시로 결과 화면 표시\r\n    setIsResultDisplayed(true);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    // 뒤로 가기 버튼 클릭 시 초기 상태로 복원\r\n    setIsResultDisplayed(false);\r\n    setSelectedFile(null);\r\n    setPersonalColor('');\r\n    setFashionItems([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>퍼컬 AI</h1>\r\n\r\n      {!isResultDisplayed ? (\r\n        // 사진 업로드 화면\r\n        <div>\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n          <button onClick={handleUpload}>사진 업로드 및 분석</button>\r\n        </div>\r\n      ) : (\r\n        // 결과 화면 (임시 데이터 표시)\r\n        <div>\r\n          <h2>퍼스널 컬러 결과: {personalColor}</h2>\r\n          <h3>추천 패션 아이템:</h3>\r\n          <ul>\r\n            {fashionItems.map((item, index) => (\r\n              <li key={index}>{item}</li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={handleBack}>뒤로 가기</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}